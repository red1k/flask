user_1 = User(username='red', email='red@demo.com', password='password')
user_2 = User(username='blah', email='blah@demo.com', password='password')

db.session.add(user_1)
db.session.add(user_2)
db.session.commit()

QUERYING:
    User.query.all() - get all users
    User.query.first() - get first users

    User.query.filter_by(username='red').all()
    User.query.filter_by(username='red').first()

    User.query.get(1) - get user by id

    user = User.query.get(1)

post_1 = Post(title='article1', 'content'='test1', user_id=user.id)
post_2 = Post(title='article2', 'content'='test2', user_id=user.id)

db.session.add(post_1)
db.session.add(post_2)
db.session.commit()

Create DATABASE:
	from flaskblog import db
	from flaskblog.models import User, Post

	db.create_all()


Delete and create db
    db.drop_all()
    db.create_all()

RELATIONSHIP:

class Role(db.Model):
	__tablename__ = 'roles'
	id    = db.Column(db.Integer, primary_key=True)
	name  = db.Column(db.String(64), unique=True)
	users = db.relationship('User', backref='role')

	def __repr(self):
		return '<Role %r>' % self.name

class User(db.Model):
	__tablename__ = 'users'
	id      = db.Column(db.Integer, primary_key=True)
	name    = db.Column(db.String(64), unique=True)
	role_id = db.Column(db.Integer, db.ForeignKey('roles.id'))

	def __repr(self):
		return '<User %r>' % self.name

QUERY:
	db.create_all()		# create db file
	db.drop_all()		# delete db file

	# creating
	admin_role = Role(name='admin')
	mod_role = Role(name='moderator')
	user_role = Role(name='user')
	user_john = User(username='john', role=admin_role)
	user_susan = User(username='susan', role=user_role)
	user_david = User(username='david', role=user_role)

	# add to db file
	db.session.add(admin_role)
	db.session.add(mod_role)
	db.session.add(user_role)

	db.session.add(user_john)
	db.session.add(user_susan)
	db.session.add(user_david)

	db.session.add_all([admin_role, mod_role, user_role,
						user_john, user_susan, user_david])

	db.session.commit()

	# see
	admin_role.id
	mod_role.id
	user_role.id

	# modify
	admin_role.name = 'administrator'
	db.session.add(admin_role)
	db.session.commit()

	# delete
	db.session.delete(mod_role)
	db.session.commit()

	# querying
	Role.query.all()
	User.query.all()

	User.query.filter_by(role=user_role).all()

	user_role = Role.query.filter_by(name='User').first()
	.first()
	.all()
	.first_or_404()
	.get()
	.get_or_404()
	.count()
	.paginate()

